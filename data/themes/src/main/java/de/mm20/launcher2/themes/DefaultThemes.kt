package de.mm20.launcher2.themes

import java.util.UUID


val DefaultThemeId = UUID(0L, 0L)

val DefaultLightColorScheme = ColorScheme<Color>(
    primary = ColorRef(CorePaletteColor.Primary, 40),
    onPrimary = ColorRef(CorePaletteColor.Primary, 100),
    primaryContainer = ColorRef(CorePaletteColor.Primary, 90),
    onPrimaryContainer = ColorRef(CorePaletteColor.Primary, 10),
    secondary = ColorRef(CorePaletteColor.Secondary, 40),
    onSecondary = ColorRef(CorePaletteColor.Secondary, 100),
    secondaryContainer = ColorRef(CorePaletteColor.Secondary, 90),
    onSecondaryContainer = ColorRef(CorePaletteColor.Secondary, 10),
    tertiary = ColorRef(CorePaletteColor.Tertiary, 40),
    onTertiary = ColorRef(CorePaletteColor.Tertiary, 100),
    tertiaryContainer = ColorRef(CorePaletteColor.Tertiary, 90),
    onTertiaryContainer = ColorRef(CorePaletteColor.Tertiary, 10),
    error = ColorRef(CorePaletteColor.Error, 40),
    onError = ColorRef(CorePaletteColor.Error, 100),
    errorContainer = ColorRef(CorePaletteColor.Error, 90),
    onErrorContainer = ColorRef(CorePaletteColor.Error, 10),
    surfaceDim = ColorRef(CorePaletteColor.Neutral, 87),
    surface = ColorRef(CorePaletteColor.Neutral, 98),
    surfaceBright = ColorRef(CorePaletteColor.Neutral, 98),
    surfaceContainerLowest = ColorRef(CorePaletteColor.Neutral, 100),
    surfaceContainerLow = ColorRef(CorePaletteColor.Neutral, 96),
    surfaceContainer = ColorRef(CorePaletteColor.Neutral, 94),
    surfaceContainerHigh = ColorRef(CorePaletteColor.Neutral, 92),
    surfaceContainerHighest = ColorRef(CorePaletteColor.Neutral, 90),
    onSurface = ColorRef(CorePaletteColor.Neutral, 10),
    onSurfaceVariant = ColorRef(CorePaletteColor.NeutralVariant, 30),
    outline = ColorRef(CorePaletteColor.NeutralVariant, 50),
    outlineVariant = ColorRef(CorePaletteColor.NeutralVariant, 80),
    inverseSurface = ColorRef(CorePaletteColor.Neutral, 20),
    inverseOnSurface = ColorRef(CorePaletteColor.Neutral, 95),
    inversePrimary = ColorRef(CorePaletteColor.Primary, 80),
    surfaceVariant = ColorRef(CorePaletteColor.NeutralVariant, 90),
    surfaceTint = ColorRef(CorePaletteColor.Primary, 40),
    background = ColorRef(CorePaletteColor.Neutral, 98),
    onBackground = ColorRef(CorePaletteColor.Neutral, 10),
    scrim = ColorRef(CorePaletteColor.Neutral, 0),
)

val DefaultDarkColorScheme = ColorScheme<Color>(
    primary = ColorRef(CorePaletteColor.Primary, 80),
    onPrimary = ColorRef(CorePaletteColor.Primary, 20),
    primaryContainer = ColorRef(CorePaletteColor.Primary, 30),
    onPrimaryContainer = ColorRef(CorePaletteColor.Primary, 90),
    secondary = ColorRef(CorePaletteColor.Secondary, 80),
    onSecondary = ColorRef(CorePaletteColor.Secondary, 20),
    secondaryContainer = ColorRef(CorePaletteColor.Secondary, 30),
    onSecondaryContainer = ColorRef(CorePaletteColor.Secondary, 90),
    tertiary = ColorRef(CorePaletteColor.Tertiary, 80),
    onTertiary = ColorRef(CorePaletteColor.Tertiary, 20),
    tertiaryContainer = ColorRef(CorePaletteColor.Tertiary, 30),
    onTertiaryContainer = ColorRef(CorePaletteColor.Tertiary, 90),
    error = ColorRef(CorePaletteColor.Error, 80),
    onError = ColorRef(CorePaletteColor.Error, 20),
    errorContainer = ColorRef(CorePaletteColor.Error, 30),
    onErrorContainer = ColorRef(CorePaletteColor.Error, 90),
    surfaceDim = ColorRef(CorePaletteColor.Neutral, 6),
    surface = ColorRef(CorePaletteColor.Neutral, 6),
    surfaceBright = ColorRef(CorePaletteColor.Neutral, 24),
    surfaceContainerLowest = ColorRef(CorePaletteColor.Neutral, 4),
    surfaceContainerLow = ColorRef(CorePaletteColor.Neutral, 10),
    surfaceContainer = ColorRef(CorePaletteColor.Neutral, 12),
    surfaceContainerHigh = ColorRef(CorePaletteColor.Neutral, 17),
    surfaceContainerHighest = ColorRef(CorePaletteColor.Neutral, 22),
    onSurface = ColorRef(CorePaletteColor.Neutral, 90),
    onSurfaceVariant = ColorRef(CorePaletteColor.NeutralVariant, 80),
    outline = ColorRef(CorePaletteColor.NeutralVariant, 60),
    outlineVariant = ColorRef(CorePaletteColor.NeutralVariant, 30),
    inverseSurface = ColorRef(CorePaletteColor.Neutral, 98),
    inverseOnSurface = ColorRef(CorePaletteColor.Neutral, 10),
    inversePrimary = ColorRef(CorePaletteColor.Primary, 40),
    surfaceVariant = ColorRef(CorePaletteColor.NeutralVariant, 30),
    surfaceTint = ColorRef(CorePaletteColor.Primary, 80),
    background = ColorRef(CorePaletteColor.Neutral, 6),
    onBackground = ColorRef(CorePaletteColor.Neutral, 90),
    scrim = ColorRef(CorePaletteColor.Neutral, 0),
)